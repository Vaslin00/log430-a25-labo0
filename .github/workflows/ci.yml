name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker compose build

      - name: Save image as artifact
        run: docker save labo0_calculator:latest | gzip > image.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  test:
    runs-on: self-hosted
    needs: build
    environment: Test Pipeline CI/CD
    steps:
      - uses: actions/checkout@v4

      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load docker image
        run: gunzip -c image.tar.gz | docker load

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Installer requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Créer fichier .env
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env 
          echo "DB_NAME=labo0_db" >> .env
          echo "DB_USER=labo0" >> .env 
          echo "DB_PASS=lab0" >> .env
          echo "REDIS_HOST=127.0.0.1" >> .env 
          echo "REDIS_PORT=6379" >> .env
          echo "REDIS_DB=0" >> .env

      - name: Run tests
        working-directory: src
        run: python3 -m pytest

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load docker image
        run: gunzip -c image.tar.gz | docker load

      - name: Déploiement local
        run: |
          cd $GITHUB_WORKSPACE
          echo "Déploiement sur la VM en cours..."

          docker compose down || true
          docker compose up -d
